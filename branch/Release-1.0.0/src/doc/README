The main program is a python script named 
websane.py in the src directory. 

Check out the config files for configuration 
options.

You should extract the entire filestructure and
run the script from its own directory. 

When you run the websane script it will create
a webserver on your machine's local port 5423 
and should point your browser to 
http://127.0.0.1:5423/demo.html to view the 
interface. A lot of information (and possible
errors) will be printed out by the websane.py
script, so keep an eye on it for errors.

By default it will serve out files from the 
../demo (relative to the place from which it
was started).

Files are saved in a secure way, and when the
python script exits it will delete the files.
This means that if the script crashes, you will
not loose you scans. If you exit normally all
scanned files will be deleted.

Step by step
------------
- Make sure you have python 2.3 or newer, SANE, 
  PIL (and SANE support) and minidom installed and
  configured. 
- Uncompress this package to a directory
- Go to the src directory
- command 'python websane.py' to execute the python
  server
- Point your browser to 
  http://127.0.0.1:5423/demo.html
- Enjoy

Requirements
------------
- SANE installed and configured (you should be 
  able to scan using scanimage before trying out
  WebSANE).
- The Python Imaging Library with SANE support.
  (on Debian SANE support is in a separate 
  package)
- Python minidom. On Debian this comes with the
  python-xml package.


For debugging
-------------
For information about the scanner and its
options point your browser to 
http://127.0.0.1:5423/info

To simply snap a preview image use
http://127.0.0.1:5423/snap

To quickly scan an image you can also use
http://127.0.0.1:5423/scan
