<htmlPage title="The plan">
<h3>Architecture</h3>
<p>
The part visible to the client will be written in XHTML, CSS and Javascript. 
</p>
<p>
The server end will be written in python, and will use the scanimage and convert 
binaries.
</p>
<p>
While the CSS and Javascript will remain static, the DOM of the XHTML will be modified
before the page is sent to the user. This modification will mainly mean changing
the form values to match the ones the user specified. The dom manipulation will
be very non-intrusive. The only changes will be made in to those elements with certain
id attributes. In practical terms, this means that the entire XHTML part can be 
completely redesigned or rewritten, and will still work with the server part as long 
as the tags are on the right form elements.
</p>
<h3>Requirements</h3>
<p>
The invokations of the binaries will be done using the Popen module. This means
that the package will depend on a python version of 2.4 or newer. 
</p>
<p>
An installed version of SANE and ImageMagic (for scanimage and convert respectively).
</p>
<p>
Possibly apache if the server end can't run independently.
</p>
<h3>Open questions</h3>
<p>
<ul>
<li>Should the overlay (darkening) be done on the server, or on the client as currently in the demo?</li>
<ul>
<li>Probably on the server as this would simplify the javascript part significantly -> less crossplatform problems</li>
<li>The speed of the client would also be improved and the moire stuff would vanish if we used the server to create a darkened version of the preview.</li>
</ul>
<li>Should the server side run independently as a webserver, or on top of apache or both?</li>
<li>How should saving, viewing of a saved image and deleting of a saved image work?</li>
<ul><li>
I like the idea of putting everything in steps. First the person previews, 
sets the levels and selection and choses if the scanned image should be reviewed 
before save. Then if the user selected to review before save, she would get 
something similar to <a href="http://persistent.info/files/20040508.magnifier/">the magnifier</a>
and if she accepts, she would be given a Save As dialog (this is done by serving
the image as type octet-stream). 
</li>
<li>
Images should be stored for soemthing like 30mins and the url given to the user should
be ungessable and unique (=basedir/timestamp+randomnumbers/imagename.png).
</li>
</ul>
</ul>
</p>
<h3>Goals</h3>
This are rough and are not attainable for the first release.
<h4>Primary</h4>
<ul>
<li>Easy to use</li>
<li>Cross platform and cross browser</li>
<li>Minimal requirements on browser, but always without compromizing usability</li>
<li>Possibility of separating xhtml from backend</li>
<li>Backend should be configurable</li>
</ul>
<h4>Secondary</h4>
<ul>
<li>Help system</li>
<li>Clear debugging information on server</li>
<li>Logs and statistics</li>
<li>Scanner specific settings</li>
<li>Showing more possibilities offered by convert</li>
</ul>
</htmlPage>
